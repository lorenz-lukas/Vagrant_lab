---
# Playbook para gerar manualmente as chaves de CA requeridas pelo master.
# Isso é feito pois para poder executar o 'kubeadm join' nos slaves é 
# necessário conhecer de antemão o hash do módulo da chave pública (ca.crt)
# do certificado.
# Para inspecionar o certificado gerado use a opção '-e inspect_cert=true'
# Para forçar gerar um novo par de chaves para o CA use '-e regenerate_CA_pair=true'
  - hosts: 127.0.0.1
    vars:
      ansible_connection: local
    tasks:
      - name: Create project CA certificate directory
        file:
          name: "roles/kube_master/files/envs/{{ env_name }}"
          state: directory
          mode: 0755

      - name: Create CA key
        openssl_privatekey:
          mode: 0400
          path: roles/kube_master/files/envs/{{ env_name }}/ca.key
          size: 2048
          force: "{{ regenerate_CA_pair | default(false) }}"

      - name: Create CA csr
        openssl_csr:
          basicConstraints: "CA:TRUE"
          basic_constraints_critical: yes
          # common_name: "{{ master_lb_address }}"
          common_name: "kuberentes.development.wapyapp.com"
          key_usage: "digitalSignature,keyEncipherment,keyCertSign"
          key_usage_critical: yes
          mode: 0660
          path: roles/kube_master/files/envs/{{ env_name }}/ca.csr
          privatekey_path: roles/kube_master/files/envs/{{ env_name }}/ca.key
          force: "{{ regenerate_CA_pair | default(false) }}"

      - name: Create CA certificate
        openssl_certificate:
          csr_path: roles/kube_master/files/envs/{{ env_name }}/ca.csr
          mode: 0660
          path: roles/kube_master/files/envs/{{ env_name }}/ca.crt
          privatekey_path: roles/kube_master/files/envs/{{ env_name }}/ca.key
          provider: selfsigned
          valid_in: 3650d
          force: "{{ regenerate_CA_pair | default(false) }}"

      - name: Get ca.crt
        shell: "openssl x509 -noout -text -in roles/kube_master/files/envs/{{ env_name }}/ca.crt"
        register: validate_crt
        when: "inspect_cert | default(false)"

      - name: Show ca.crt
        debug:
          msg="{{ validate_crt.stdout_lines }}"
        when: "inspect_cert | default(false)"

      - name: Calculate token ca cert hash
        shell: |
          openssl x509 -pubkey -in roles/kube_master/files/envs/{{ env_name }}/ca.crt | \
          openssl rsa -pubin -outform der 2>/dev/null | \
          openssl dgst -sha256 -hex | sed 's/^.* //'
        register: token_ca_cert_hash

      - name: Display token ca cert hash
        debug:
          msg="--token {{ token }} --discovery-token-ca-cert-hash sha256:{{ token_ca_cert_hash.stdout }}"


# ansible-playbook testca.yml -e env_name=prod -e token=abcde
